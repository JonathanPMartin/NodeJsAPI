openapi: 3.0.0
info:
  version: 1.0.0
  title: Web API Development Back End Demonstration API
  description: A simple blog API. Use the module worksheets to complete the code and API architecture!
  contact:
    name: Jonathan Martin
    email: marti243@uni.coventry.ac.uk
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://ecology-fiction-3004.codio-box.uk/api/v1'
    description: Development server
tags:
  - name: Users
    description: API endpoints for user management.
  - name: Coverter
    description: API endpoint for converting between currencies.
  - name: Portfolio
    description: API endpoint for Portfolios of the user.
  - name: Purchases
    description: API endpoint for Purchases of the user.
paths:
  /users:
    summary: Represents an individual user
    description: >
      This resource represents an individual user in the system.
      Each user is identified by a numeric `id`.
    
    post:
      tags:
        - Users
      description:
        Create a new user account.
      requestBody:
        description: All new user data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./users.json#/definitions/user
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: ./users.json#/definitions/userUpdated
    get:
      tags:
        - Users
      description:
        Get All Users.
      responses:
        '201':
          description: View of user record
          content:
            application/json:
              schema:
                $ref: ./users.json#/definitions/userView
        '401':
          description: Non-admin users can only view their own record
        '404':
          description: Not found
		
   
  /users/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: Numeric id of the user
    put:
      tags:
        - Users
      description:
        Update UserRole.
      requestBody:
        description: Update a visible property or the password.
        required: true
        content:
          application/json:
            schema:
              $ref: ./users.json#/definitions/userUpdate
      responses:
        '201':
          description: Confirmation and return of new data.
          content:
            application/json:
              schema:
                $ref: ./users.json#/definitions/userUpdated
        '404':
          description: Not found
        '401':
          description: User is not an admin
    delete:
      tags:
        - Users
      description:
        Delete user by id.
      responses:
        '201':
          description: Confirmation of deletion.
          content:
            application/json:
              schema:
                $ref: ./users.json#/definitions/userDeleted
        '401':
          description: Only admin users can delete accounts
        '404':
          description: Not found

  /Coverter:
    summary: Represents an individual user
    description:
      convert between currencies
    post:
      tags:
        - Coverter
      description:
       convert between currencies
      requestBody:
        description: converts between two currencies returing the value.
        required: true
        content:
          application/json:
            schema:
              $ref: ./coverter.json#/definitions/converter
      responses:
        '201':
          description: Confirmation and return of the query.
          content:
            application/json:
              schema:
                $ref: ./coverter.json#/definitions/Converted
        '404':
          description: not found
	
  /Coverter/Date:
    summary: Represents an individual user
    description:
      convert between currencies by date
    post:
      tags:
        - Coverter
      description:
       convert between currencies by date
      requestBody:
        description: converts between two currencies returing the value.
        required: true
        content:
          application/json:
            schema:
              $ref: ./coverter.json#/definitions/converterHistoric
      responses:
        '201':
          description: Confirmation and return of the query.
          content:
            application/json:
              schema:
                $ref: ./coverter.json#/definitions/Converted
        '404':
          description: not found
	
  /Coverter/Change:
    summary: Represents an individual user
    description:
      rate of change between base and other currencies
    post:
      tags:
        - Coverter
      description:
       rate of change between base and other currencies
      requestBody:
        description: converts between two currencies returing the value.
        required: true
        content:
          application/json:
            schema:
              $ref: ./coverter.json#/definitions/Change
      responses:
        '201':
          description: Confirmation and return of the query.
          content:
            application/json:
              schema:
                $ref: ./coverter.json#/definitions/Changed
        '404':
          description: not found
  /portfolio:
    summary: Represents an individual user
    description:
      routes on the / command on portfolio
    post:
      tags:
        - Portfolio
      description:
       upload of new port
      requestBody:
        description: contains name and userid.
        required: true
        content:
          application/json:
            schema:
              $ref: ./portfolio.json#/definitions/portfolio
      responses:
        '201':
          description: Confirmation.
        '401':
          description: not authenticated/authorised or data not cleaned
        '404':
          description: not found
    get:
      tags:
        - Portfolio
      description:
        portfolios of the users
      responses:
        '201':
          description: Confirmation and return of the query.
          content:
            application/json:
              schema:
                $ref: ./portfolio.json#/definitions/Returedports
        '401':
          description: not authenticated/authorised or data not cleaned
        '404':
          description: not found
  /portfolio/{id}:
    summary: Represents an individual user
    description:
      routes on the / command on portfolio
    put:
      tags:
        - Portfolio
      description:
       update name of portfolio
      requestBody:
        description: contains name and userid.
        required: true
        content:
          application/json:
            schema:
              $ref: ./portfolio.json#/definitions/updateName
      responses:
        '201':
          description: Confirmation and query return.
          content:
            application/json:
              schema:
                $ref: ./portfolio.json#/definitions/queryReturn
        '401':
          description: not authenticated/authorised or data not cleaned
        '404':
          description: not found
    delete:
      tags:
        - Portfolio
      description:
        portfolio by id
      responses:
        '201':
          description: Confirmation and return of the query.
          content:
            application/json:
              schema:
                $ref: ./portfolio.json#/definitions/queryReturn
        '401':
          description: not authenticated/authorised or data not cleaned
        '404':
          description: not found
  /portfolio/Owner/{id}:
    summary: Represents an individual user
    description:
      routes on the / command on portfolio
    put:
      tags:
        - Portfolio
      description:
       update owner of portfolio
      requestBody:
        description: contains name and userid.
        required: true
        content:
          application/json:
            schema:
              $ref: ./portfolio.json#/definitions/updateOwner
      responses:
        '201':
          description: Confirmation and query return.
          content:
            application/json:
              schema:
                $ref: ./portfolio.json#/definitions/queryReturn
        '401':
          description: not authenticated/authorised or data not cleaned
        '404':
          description: not found
  /portfolio/user/{id}:
    summary: Represents an individual user
    description:
      routes on the / command on portfolio
    delete:
      tags:
        - Portfolio
      description:
        portfolio by user id
      responses:
        '201':
          description: Confirmation and return of the query.
          content:
            application/json:
              schema:
                $ref: ./portfolio.json#/definitions/queryReturn
        '401':
          description: not authenticated/authorised or data not cleaned
        '404':
          description: not found
  /purchases:
    summary: Represents an individual user
    description:
      routes on the / command on portfolio
    get:
      tags:
        - Purchases
      description:
        Add Purchase
      responses:
        '201':
          description: Confirmation and return of the query.
          content:
            application/json:
              schema:
                $ref: ./purchases.json#/definitions/purchases
        '401':
          description: not authenticated/authorised or data not cleaned
        '404':
          description: not found

  /purchases/{id}:
    summary: Represents an individual user
    description:
      routes on the / command on portfolio
    put:
      tags:
        - Purchases
      description:
       update purchase info
      requestBody:
        description: contains name and userid.
        required: true
        content:
          application/json:
            schema:
              $ref: ./purchases.json#/definitions/update
      responses:
        '201':
          description: Confirmation and query return.
          content:
            application/json:
              schema:
                $ref: ./purchases.json#/definitions/queryReturn
        '401':
          description: not authenticated/authorised or data not cleaned
        '404':
          description: not found
    delete:
      tags:
        - Purchases
      description:
        purchase by id
      responses:
        '201':
          description: Confirmation and return of the query.
          content:
            application/json:
              schema:
                $ref: ./purchases.json#/definitions/queryReturn
        '401':
          description: not authenticated/authorised or data not cleaned
        '404':
          description: not found
  /purchases/port/{id}:
    summary: Represents an individual user
    description:
      routes on the / command on portfolio
    get:
      tags:
        - Purchases
      description:
       purchases by port id
      requestBody:
        description: contains name and userid.
        required: true
      responses:
        '201':
          description: Confirmation and query return.
          content:
            application/json:
              schema:
                $ref: ./purchases.json#/definitions/queryReturn
        '401':
          description: not authenticated/authorised or data not cleaned
        '404':
          description: not found
    delete:
      tags:
        - Purchases
      description:
        purchases by port id
      responses:
        '201':
          description: Confirmation and return of the query.
          content:
            application/json:
              schema:
                $ref: ./purchases.json#/definitions/queryReturn
        '401':
          description: not authenticated/authorised or data not cleaned
        '404':
          description: not found